{
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "datasource",
            "uid": "grafana"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "type": "dashboard"
        }
      ]
    },
    "description": "Istio Service Dashboard version 1.22.0",
    "editable": true,
    "fiscalYearStartMonth": 0,
    "gnetId": 7636,
    "graphTooltip": 0,
    "id": 42,
    "links": [],
    "liveNow": false,
    "panels": [
      {
        "collapsed": false,
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 0
        },
        "id": 106,
        "panels": [],
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "refId": "A"
          }
        ],
        "title": "General",
        "type": "row"
      },
      {
        "gridPos": {
          "h": 3,
          "w": 24,
          "x": 0,
          "y": 1
        },
        "id": 89,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<div class=\"dashboard-header text-center\">\n<span>SERVICE: $service</span>\n</div>",
          "mode": "html"
        },
        "pluginVersion": "10.4.3",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "rgb(31, 120, 193)",
              "mode": "fixed"
            },
            "mappings": [
              {
                "options": {
                  "match": "null",
                  "result": {
                    "text": "N/A"
                  }
                },
                "type": "special"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "ops"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 6,
          "x": 0,
          "y": 4
        },
        "id": 12,
        "maxDataPoints": 100,
        "options": {
          "colorMode": "none",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "10.4.3",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "round(sum(irate(istio_requests_total{reporter=~\"$qrep\",destination_service=~\"$service\", cluster=\"$cluster\"}[5m])), 0.001)",
            "format": "time_series",
            "intervalFactor": 1,
            "range": true,
            "refId": "A",
            "step": 4
          }
        ],
        "title": "Client Request Volume",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "rgb(31, 120, 193)",
              "mode": "fixed"
            },
            "mappings": [],
            "noValue": "0",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "dark-red",
                  "value": null
                },
                {
                  "color": "dark-yellow",
                  "value": 0.95
                },
                {
                  "color": "dark-green",
                  "value": 0.99
                }
              ]
            },
            "unit": "percentunit"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 6,
          "x": 6,
          "y": 4
        },
        "id": 14,
        "maxDataPoints": 100,
        "options": {
          "colorMode": "none",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "10.4.3",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "sum(irate(istio_requests_total{reporter=~\"$qrep\",destination_service=~\"$service\",response_code!~\"5.*\", cluster=\"$cluster\"}[5m])) / (sum(irate(istio_requests_total{reporter=~\"$qrep\",destination_service=~\"$service\", cluster=\"$cluster\"}[5m])) or on () vector(1))",
            "format": "time_series",
            "intervalFactor": 1,
            "range": true,
            "refId": "A"
          }
        ],
        "title": "Client Success Rate (non-5xx responses)",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 10,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "s"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 6,
          "x": 12,
          "y": 4
        },
        "id": 87,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "right",
            "showLegend": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          }
        },
        "pluginVersion": "10.1.5",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~\"$qrep\",destination_service=~\"$service\", cluster=\"$cluster\"}[1m])) by (le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=~\"$qrep\",destination_service=~\"$service\", cluster=\"$cluster\"}[1m])) by (le))",
            "format": "time_series",
            "interval": "",
            "intervalFactor": 1,
            "legendFormat": "P50",
            "range": true,
            "refId": "A"
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~\"$qrep\",destination_service=~\"$service\", cluster=\"$cluster\"}[1m])) by (le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=~\"$qrep\",destination_service=~\"$service\", cluster=\"$cluster\"}[1m])) by (le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "P90",
            "range": true,
            "refId": "B"
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~\"$qrep\",destination_service=~\"$service\", cluster=\"$cluster\"}[1m])) by (le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=~\"$qrep\",destination_service=~\"$service\", cluster=\"$cluster\"}[1m])) by (le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "P99",
            "range": true,
            "refId": "C"
          }
        ],
        "title": "Client Request Duration",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "rgb(31, 120, 193)",
              "mode": "fixed"
            },
            "mappings": [
              {
                "options": {
                  "match": "null",
                  "result": {
                    "text": "N/A"
                  }
                },
                "type": "special"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "Bps"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 6,
          "x": 18,
          "y": 4
        },
        "id": 84,
        "maxDataPoints": 100,
        "options": {
          "colorMode": "none",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "mean"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "10.4.3",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "sum(irate(istio_tcp_received_bytes_total{reporter=~\"$qrep\", destination_service=~\"$service\", cluster=\"$cluster\"}[1m]))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "",
            "range": true,
            "refId": "A"
          }
        ],
        "title": "TCP Received Bytes",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "rgb(31, 120, 193)",
              "mode": "fixed"
            },
            "mappings": [
              {
                "options": {
                  "match": "null",
                  "result": {
                    "text": "N/A"
                  }
                },
                "type": "special"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "ops"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 6,
          "x": 0,
          "y": 8
        },
        "id": 97,
        "maxDataPoints": 100,
        "options": {
          "colorMode": "none",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "10.4.3",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "round(sum(irate(istio_requests_total{reporter=\"destination\",destination_service=~\"$service\", cluster=\"$cluster\"}[5m])), 0.001)",
            "format": "time_series",
            "intervalFactor": 1,
            "range": true,
            "refId": "A",
            "step": 4
          }
        ],
        "title": "Server Request Volume",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "rgb(31, 120, 193)",
              "mode": "fixed"
            },
            "mappings": [],
            "noValue": "0",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "rgba(50, 172, 45, 0.97)",
                  "value": null
                },
                {
                  "color": "rgba(237, 129, 40, 0.89)",
                  "value": 95
                },
                {
                  "color": "rgba(245, 54, 54, 0.9)",
                  "value": 99
                }
              ]
            },
            "unit": "percentunit"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 6,
          "x": 6,
          "y": 8
        },
        "id": 98,
        "maxDataPoints": 100,
        "options": {
          "colorMode": "none",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "10.4.3",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "sum(irate(istio_requests_total{reporter=\"destination\",destination_service=~\"$service\",response_code!~\"5.*\", cluster=\"$cluster\"}[5m])) / (sum(irate(istio_requests_total{reporter=\"destination\",destination_service=~\"$service\", cluster=\"$cluster\"}[5m])) or on () vector(1))",
            "format": "time_series",
            "intervalFactor": 1,
            "range": true,
            "refId": "A"
          }
        ],
        "title": "Server Success Rate (non-5xx responses)",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 10,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "s"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 6,
          "x": 12,
          "y": 8
        },
        "id": 99,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "right",
            "showLegend": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          }
        },
        "pluginVersion": "10.1.5",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\"destination\",destination_service=~\"$service\", cluster=\"$cluster\"}[1m])) by (le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\"destination\",destination_service=~\"$service\", cluster=\"$cluster\"}[1m])) by (le))",
            "format": "time_series",
            "interval": "",
            "intervalFactor": 1,
            "legendFormat": "P50",
            "range": true,
            "refId": "A"
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\"destination\",destination_service=~\"$service\", cluster=\"$cluster\"}[1m])) by (le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\"destination\",destination_service=~\"$service\", cluster=\"$cluster\"}[1m])) by (le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "P90",
            "range": true,
            "refId": "B"
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\"destination\",destination_service=~\"$service\", cluster=\"$cluster\"}[1m])) by (le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\"destination\",destination_service=~\"$service\", cluster=\"$cluster\"}[1m])) by (le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "P99",
            "range": true,
            "refId": "C"
          }
        ],
        "title": "Server Request Duration",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "rgb(31, 120, 193)",
              "mode": "fixed"
            },
            "mappings": [
              {
                "options": {
                  "match": "null",
                  "result": {
                    "text": "N/A"
                  }
                },
                "type": "special"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "Bps"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 6,
          "x": 18,
          "y": 8
        },
        "id": 100,
        "maxDataPoints": 100,
        "options": {
          "colorMode": "none",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "mean"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "10.4.3",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "sum(irate(istio_tcp_sent_bytes_total{reporter=~\"$qrep\", destination_service=~\"$service\", cluster=\"$cluster\"}[1m]))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "",
            "range": true,
            "refId": "A"
          }
        ],
        "title": "TCP Sent Bytes",
        "type": "stat"
      },
      {
        "collapsed": false,
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 12
        },
        "id": 104,
        "panels": [],
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "refId": "A"
          }
        ],
        "title": "Client Workloads",
        "type": "row"
      },
      {
        "gridPos": {
          "h": 3,
          "w": 24,
          "x": 0,
          "y": 13
        },
        "id": 45,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<div class=\"dashboard-header text-center\">\n<span>CLIENT WORKLOADS</span>\n</div>",
          "mode": "html"
        },
        "pluginVersion": "10.4.3",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "ops"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byValue",
                "options": {
                  "op": "gte",
                  "reducer": "allIsNull",
                  "value": 0
                }
              },
              "properties": [
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": true,
                    "tooltip": true,
                    "viz": false
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 0,
          "y": 16
        },
        "id": 25,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "10.1.5",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "round(sum(irate(istio_requests_total{connection_security_policy=\"mutual_tls\",destination_service=~\"$service\",reporter=~\"$qrep\",source_workload=~\"$srcwl\",source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[5m])) by (source_workload, source_workload_namespace, response_code), 0.001)",
            "format": "time_series",
            "intervalFactor": 1,
            "legendFormat": "{{ source_workload }}.{{ source_workload_namespace }} : {{ response_code }} (🔐mTLS)",
            "range": true,
            "refId": "A",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "round(sum(irate(istio_requests_total{connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", reporter=~\"$qrep\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[5m])) by (source_workload, source_workload_namespace, response_code), 0.001)",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ source_workload }}.{{ source_workload_namespace }} : {{ response_code }}",
            "range": true,
            "refId": "B",
            "step": 2
          }
        ],
        "title": "Incoming Requests By Source And Response Code",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 10,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "max": 1.01,
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "percentunit"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byValue",
                "options": {
                  "op": "gte",
                  "reducer": "allIsNull",
                  "value": 0
                }
              },
              "properties": [
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": true,
                    "tooltip": true,
                    "viz": false
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 12,
          "y": 16
        },
        "id": 26,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          }
        },
        "pluginVersion": "10.1.5",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "sum(irate(istio_requests_total{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\",response_code!~\"5.*\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[5m])) by (source_workload, source_workload_namespace) / sum(irate(istio_requests_total{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[5m])) by (source_workload, source_workload_namespace)",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ source_workload }}.{{ source_workload_namespace }} (🔐mTLS)",
            "range": true,
            "refId": "A",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "sum(irate(istio_requests_total{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\",response_code!~\"5.*\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[5m])) by (source_workload, source_workload_namespace) / sum(irate(istio_requests_total{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[5m])) by (source_workload, source_workload_namespace)",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ source_workload }}.{{ source_workload_namespace }}",
            "range": true,
            "refId": "B",
            "step": 2
          }
        ],
        "title": "Incoming Success Rate (non-5xx responses) By Source",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 10,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "s"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byValue",
                "options": {
                  "op": "gte",
                  "reducer": "allIsNull",
                  "value": 0
                }
              },
              "properties": [
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": true,
                    "tooltip": true,
                    "viz": false
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 8,
          "x": 0,
          "y": 22
        },
        "id": 27,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          }
        },
        "pluginVersion": "10.1.5",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P50 (🔐mTLS)",
            "range": true,
            "refId": "A",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P90 (🔐mTLS)",
            "range": true,
            "refId": "B",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.95, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.95, sum(irate(istio_request_duration_seconds_bucket{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P95 (🔐mTLS)",
            "range": true,
            "refId": "C",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P99 (🔐mTLS)",
            "range": true,
            "refId": "D",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P50",
            "range": true,
            "refId": "E",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P90",
            "range": true,
            "refId": "F",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.95, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.95, sum(irate(istio_request_duration_seconds_bucket{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P95",
            "range": true,
            "refId": "G",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P99",
            "range": true,
            "refId": "H",
            "step": 2
          }
        ],
        "title": "Incoming Request Duration By Source",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 10,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "decbytes"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byValue",
                "options": {
                  "op": "gte",
                  "reducer": "allIsNull",
                  "value": 0
                }
              },
              "properties": [
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": true,
                    "tooltip": true,
                    "viz": false
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 8,
          "x": 8,
          "y": 22
        },
        "id": 28,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          }
        },
        "pluginVersion": "10.1.5",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P50 (🔐mTLS)",
            "range": true,
            "refId": "A",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.90, sum(irate(istio_request_bytes_bucket{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}}  P90 (🔐mTLS)",
            "range": true,
            "refId": "B",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.95, sum(irate(istio_request_bytes_bucket{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P95 (🔐mTLS)",
            "range": true,
            "refId": "C",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.99, sum(irate(istio_request_bytes_bucket{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}}  P99 (🔐mTLS)",
            "range": true,
            "refId": "D",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P50",
            "range": true,
            "refId": "E",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.90, sum(irate(istio_request_bytes_bucket{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P90",
            "range": true,
            "refId": "F",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.95, sum(irate(istio_request_bytes_bucket{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P95",
            "range": true,
            "refId": "G",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.99, sum(irate(istio_request_bytes_bucket{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P99",
            "range": true,
            "refId": "H",
            "step": 2
          }
        ],
        "title": "Incoming Request Size By Source",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 10,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "decbytes"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byValue",
                "options": {
                  "op": "gte",
                  "reducer": "allIsNull",
                  "value": 0
                }
              },
              "properties": [
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": true,
                    "tooltip": true,
                    "viz": false
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 8,
          "x": 16,
          "y": 22
        },
        "id": 68,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          }
        },
        "pluginVersion": "10.1.5",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.50, sum(irate(istio_response_bytes_bucket{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P50 (🔐mTLS)",
            "range": true,
            "refId": "A",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.90, sum(irate(istio_response_bytes_bucket{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}}  P90 (🔐mTLS)",
            "range": true,
            "refId": "B",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.95, sum(irate(istio_response_bytes_bucket{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P95 (🔐mTLS)",
            "range": true,
            "refId": "C",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.99, sum(irate(istio_response_bytes_bucket{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}}  P99 (🔐mTLS)",
            "range": true,
            "refId": "D",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.50, sum(irate(istio_response_bytes_bucket{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P50",
            "range": true,
            "refId": "E",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.90, sum(irate(istio_response_bytes_bucket{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P90",
            "range": true,
            "refId": "F",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.95, sum(irate(istio_response_bytes_bucket{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P95",
            "range": true,
            "refId": "G",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.99, sum(irate(istio_response_bytes_bucket{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{source_workload}}.{{source_workload_namespace}} P99",
            "range": true,
            "refId": "H",
            "step": 2
          }
        ],
        "title": "Response Size By Source",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 10,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "Bps"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 0,
          "y": 28
        },
        "id": 80,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          }
        },
        "pluginVersion": "10.1.5",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "round(sum(irate(istio_tcp_received_bytes_total{reporter=~\"$qrep\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace), 0.001)",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ source_workload }}.{{ source_workload_namespace}} (🔐mTLS)",
            "range": true,
            "refId": "A",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "round(sum(irate(istio_tcp_received_bytes_total{reporter=~\"$qrep\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace), 0.001)",
            "format": "time_series",
            "intervalFactor": 1,
            "legendFormat": "{{ source_workload }}.{{ source_workload_namespace}}",
            "range": true,
            "refId": "B",
            "step": 2
          }
        ],
        "title": "Bytes Received from Incoming TCP Connection",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 10,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "Bps"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 12,
          "y": 28
        },
        "id": 82,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          }
        },
        "pluginVersion": "10.1.5",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy=\"mutual_tls\", reporter=~\"$qrep\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace), 0.001)",
            "format": "time_series",
            "intervalFactor": 1,
            "legendFormat": "{{ source_workload }}.{{ source_workload_namespace}} (🔐mTLS)",
            "range": true,
            "refId": "A",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy!=\"mutual_tls\", reporter=~\"$qrep\", destination_service=~\"$service\", source_workload=~\"$srcwl\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}[1m])) by (source_workload, source_workload_namespace), 0.001)",
            "format": "time_series",
            "intervalFactor": 1,
            "legendFormat": "{{ source_workload }}.{{ source_workload_namespace}}",
            "range": true,
            "refId": "B",
            "step": 2
          }
        ],
        "title": "Bytes Sent to Incoming TCP Connection",
        "type": "timeseries"
      },
      {
        "collapsed": false,
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 34
        },
        "id": 102,
        "panels": [],
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "refId": "A"
          }
        ],
        "title": "Service Workloads",
        "type": "row"
      },
      {
        "gridPos": {
          "h": 3,
          "w": 24,
          "x": 0,
          "y": 35
        },
        "id": 69,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<div class=\"dashboard-header text-center\">\n<span>SERVICE WORKLOADS</span>\n</div>",
          "mode": "html"
        },
        "pluginVersion": "10.4.3",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "ops"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byValue",
                "options": {
                  "op": "gte",
                  "reducer": "allIsNull",
                  "value": 0
                }
              },
              "properties": [
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": true,
                    "tooltip": true,
                    "viz": false
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 0,
          "y": 38
        },
        "id": 90,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "10.1.5",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "round(sum(irate(istio_requests_total{connection_security_policy=\"mutual_tls\",destination_service=~\"$service\",reporter=\"destination\",destination_workload=~\"$dstwl\",destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[5m])) by (destination_workload, destination_workload_namespace, response_code), 0.001)",
            "format": "time_series",
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} : {{ response_code }} (🔐mTLS)",
            "range": true,
            "refId": "A",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "round(sum(irate(istio_requests_total{connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", reporter=\"destination\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[5m])) by (destination_workload, destination_workload_namespace, response_code), 0.001)",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} : {{ response_code }}",
            "range": true,
            "refId": "B",
            "step": 2
          }
        ],
        "title": "Incoming Requests By Destination Workload And Response Code",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 10,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "max": 1.01,
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "percentunit"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byValue",
                "options": {
                  "op": "gte",
                  "reducer": "allIsNull",
                  "value": 0
                }
              },
              "properties": [
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": true,
                    "tooltip": true,
                    "viz": false
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 12,
          "y": 38
        },
        "id": 91,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          }
        },
        "pluginVersion": "10.1.5",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "sum(irate(istio_requests_total{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\",response_code!~\"5.*\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[5m])) by (destination_workload, destination_workload_namespace) / sum(irate(istio_requests_total{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[5m])) by (destination_workload, destination_workload_namespace)",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} (🔐mTLS)",
            "range": true,
            "refId": "A",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "sum(irate(istio_requests_total{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\",response_code!~\"5.*\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[5m])) by (destination_workload, destination_workload_namespace) / sum(irate(istio_requests_total{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[5m])) by (destination_workload, destination_workload_namespace)",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }}",
            "range": true,
            "refId": "B",
            "step": 2
          }
        ],
        "title": "Incoming Success Rate (non-5xx responses) By Destination Workload",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 10,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "s"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byValue",
                "options": {
                  "op": "gte",
                  "reducer": "allIsNull",
                  "value": 0
                }
              },
              "properties": [
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": true,
                    "tooltip": true,
                    "viz": false
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 8,
          "x": 0,
          "y": 44
        },
        "id": 94,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          }
        },
        "pluginVersion": "10.1.5",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P50 (🔐mTLS)",
            "range": true,
            "refId": "A",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P90 (🔐mTLS)",
            "range": true,
            "refId": "B",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "expr": "(histogram_quantile(0.95, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\"}[1m])) by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.95, sum(irate(istio_request_duration_seconds_bucket{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P95 (🔐mTLS)",
            "refId": "C",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P99 (🔐mTLS)",
            "range": true,
            "refId": "D",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P50",
            "range": true,
            "refId": "E",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "expr": "(histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\"}[1m])) by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P90",
            "refId": "F",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.95, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.95, sum(irate(istio_request_duration_seconds_bucket{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P95",
            "range": true,
            "refId": "G",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "(histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P99",
            "range": true,
            "refId": "H",
            "step": 2
          }
        ],
        "title": "Incoming Request Duration By Service Workload",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 10,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "decbytes"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byValue",
                "options": {
                  "op": "gte",
                  "reducer": "allIsNull",
                  "value": 0
                }
              },
              "properties": [
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": true,
                    "tooltip": true,
                    "viz": false
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 8,
          "x": 8,
          "y": 44
        },
        "id": 95,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          }
        },
        "pluginVersion": "10.1.5",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P50 (🔐mTLS)",
            "range": true,
            "refId": "A",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.90, sum(irate(istio_request_bytes_bucket{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }}  P90 (🔐mTLS)",
            "range": true,
            "refId": "B",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.95, sum(irate(istio_request_bytes_bucket{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P95 (🔐mTLS)",
            "range": true,
            "refId": "C",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.99, sum(irate(istio_request_bytes_bucket{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }}  P99 (🔐mTLS)",
            "range": true,
            "refId": "D",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P50",
            "range": true,
            "refId": "E",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.90, sum(irate(istio_request_bytes_bucket{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P90",
            "range": true,
            "refId": "F",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.95, sum(irate(istio_request_bytes_bucket{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P95",
            "range": true,
            "refId": "G",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.99, sum(irate(istio_request_bytes_bucket{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P99",
            "range": true,
            "refId": "H",
            "step": 2
          }
        ],
        "title": "Incoming Request Size By Service Workload",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 10,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "decbytes"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byValue",
                "options": {
                  "op": "gte",
                  "reducer": "allIsNull",
                  "value": 0
                }
              },
              "properties": [
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": true,
                    "tooltip": true,
                    "viz": false
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 8,
          "x": 16,
          "y": 44
        },
        "id": 96,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          }
        },
        "pluginVersion": "10.1.5",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.50, sum(irate(istio_response_bytes_bucket{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P50 (🔐mTLS)",
            "range": true,
            "refId": "A",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.90, sum(irate(istio_response_bytes_bucket{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }}  P90 (🔐mTLS)",
            "range": true,
            "refId": "B",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.95, sum(irate(istio_response_bytes_bucket{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P95 (🔐mTLS)",
            "range": true,
            "refId": "C",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.99, sum(irate(istio_response_bytes_bucket{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }}  P99 (🔐mTLS)",
            "range": true,
            "refId": "D",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.50, sum(irate(istio_response_bytes_bucket{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P50",
            "range": true,
            "refId": "E",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.90, sum(irate(istio_response_bytes_bucket{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P90",
            "range": true,
            "refId": "F",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.95, sum(irate(istio_response_bytes_bucket{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P95",
            "range": true,
            "refId": "G",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "histogram_quantile(0.99, sum(irate(istio_response_bytes_bucket{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace, le))",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace }} P99",
            "range": true,
            "refId": "H",
            "step": 2
          }
        ],
        "title": "Response Size By Service Workload",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 10,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "Bps"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 0,
          "y": 50
        },
        "id": 92,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          }
        },
        "pluginVersion": "10.1.5",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "round(sum(irate(istio_tcp_received_bytes_total{reporter=\"destination\", connection_security_policy=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace), 0.001)",
            "format": "time_series",
            "hide": false,
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace}} (🔐mTLS)",
            "range": true,
            "refId": "A",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "round(sum(irate(istio_tcp_received_bytes_total{reporter=\"destination\", connection_security_policy!=\"mutual_tls\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace), 0.001)",
            "format": "time_series",
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{ destination_workload_namespace}}",
            "range": true,
            "refId": "B",
            "step": 2
          }
        ],
        "title": "Bytes Received from Incoming TCP Connection",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 10,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "Bps"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 12,
          "y": 50
        },
        "id": 93,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          }
        },
        "pluginVersion": "10.1.5",
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy=\"mutual_tls\", reporter=\"destination\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace), 0.001)",
            "format": "time_series",
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{destination_workload_namespace }} (🔐mTLS)",
            "range": true,
            "refId": "A",
            "step": 2
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "editorMode": "code",
            "expr": "round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy!=\"mutual_tls\", reporter=\"destination\", destination_service=~\"$service\", destination_workload=~\"$dstwl\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}[1m])) by (destination_workload, destination_workload_namespace), 0.001)",
            "format": "time_series",
            "intervalFactor": 1,
            "legendFormat": "{{ destination_workload }}.{{destination_workload_namespace }}",
            "range": true,
            "refId": "B",
            "step": 2
          }
        ],
        "title": "Bytes Sent to Incoming TCP Connection",
        "type": "timeseries"
      }
    ],
    "refresh": "1m",
    "schemaVersion": 39,
    "tags": [],
    "templating": {
      "list": [
        {
          "current": {
            "selected": false,
            "text": "Managed_Prometheus_defaultazuremonitorworkspace-neu",
            "value": "defaultazuremonitorworkspace-neu"
          },
          "hide": 0,
          "includeAll": false,
          "multi": false,
          "name": "datasource",
          "options": [],
          "query": "prometheus",
          "queryValue": "",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "type": "datasource"
        },
        {
          "current": {
            "selected": false,
            "text": "develop-essentials-management",
            "value": "develop-essentials-management"
          },
          "datasource": {
            "type": "prometheus",
            "uid": "defaultazuremonitorworkspace-neu"
          },
          "definition": "label_values(kube_node_info,cluster)",
          "hide": 0,
          "includeAll": false,
          "multi": false,
          "name": "cluster",
          "options": [],
          "query": {
            "qryType": 1,
            "query": "label_values(kube_node_info,cluster)",
            "refId": "PrometheusVariableQueryEditor-VariableQuery"
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "web-essentials-frontend-main.essentials.svc.cluster.local",
            "value": "web-essentials-frontend-main.essentials.svc.cluster.local"
          },
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "definition": "query_result(sum(istio_requests_total{cluster=\"$cluster\"}) by (destination_service) or sum(istio_tcp_sent_bytes_total{cluster=\"$cluster\"}) by (destination_service))",
          "hide": 0,
          "includeAll": false,
          "label": "Service",
          "multi": false,
          "name": "service",
          "options": [],
          "query": {
            "qryType": 3,
            "query": "query_result(sum(istio_requests_total{cluster=\"$cluster\"}) by (destination_service) or sum(istio_tcp_sent_bytes_total{cluster=\"$cluster\"}) by (destination_service))",
            "refId": "PrometheusVariableQueryEditor-VariableQuery"
          },
          "refresh": 1,
          "regex": "/.*destination_service=\"([^\"]*).*/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "selected": false,
            "text": "destination",
            "value": "destination"
          },
          "datasource": "defaultazuremonitorworkspace-neu",
          "definition": "",
          "hide": 0,
          "includeAll": false,
          "label": "Reporter",
          "multi": true,
          "name": "qrep",
          "options": [
            {
              "selected": false,
              "text": "source",
              "value": "source"
            },
            {
              "selected": true,
              "text": "destination",
              "value": "destination"
            }
          ],
          "query": "source,destination",
          "queryValue": "",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 1,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "custom",
          "useTags": false
        },
        {
          "current": {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "definition": "query_result(sum(istio_requests_total{reporter=~\"$qrep\", destination_service=\"$service\", cluster=\"$cluster\"}) by (source_cluster) or sum(istio_tcp_sent_bytes_total{reporter=~\"$qrep\", destination_service=~\"$service\", cluster=\"$cluster\"}) by (source_cluster))",
          "hide": 0,
          "includeAll": true,
          "label": "Client Cluster",
          "multi": true,
          "name": "srccluster",
          "options": [],
          "query": {
            "qryType": 3,
            "query": "query_result(sum(istio_requests_total{reporter=~\"$qrep\", destination_service=\"$service\", cluster=\"$cluster\"}) by (source_cluster) or sum(istio_tcp_sent_bytes_total{reporter=~\"$qrep\", destination_service=~\"$service\", cluster=\"$cluster\"}) by (source_cluster))",
            "refId": "PrometheusVariableQueryEditor-VariableQuery"
          },
          "refresh": 1,
          "regex": "/.*cluster=\"([^\"]*).*/",
          "skipUrlSync": false,
          "sort": 2,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "definition": "query_result(sum(istio_requests_total{reporter=~\"$qrep\", destination_service=\"$service\", cluster=\"$cluster\"}) by (source_workload_namespace) or sum(istio_tcp_sent_bytes_total{reporter=~\"$qrep\", destination_service=~\"$service\", cluster=\"$cluster\"}) by (source_workload_namespace))",
          "hide": 0,
          "includeAll": true,
          "label": "Client Workload Namespace",
          "multi": true,
          "name": "srcns",
          "options": [],
          "query": {
            "qryType": 3,
            "query": "query_result(sum(istio_requests_total{reporter=~\"$qrep\", destination_service=\"$service\", cluster=\"$cluster\"}) by (source_workload_namespace) or sum(istio_tcp_sent_bytes_total{reporter=~\"$qrep\", destination_service=~\"$service\", cluster=\"$cluster\"}) by (source_workload_namespace))",
            "refId": "PrometheusVariableQueryEditor-VariableQuery"
          },
          "refresh": 1,
          "regex": "/.*namespace=\"([^\"]*).*/",
          "skipUrlSync": false,
          "sort": 3,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "definition": "query_result(sum(istio_requests_total{reporter=~\"$qrep\", destination_service=~\"$service\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}) by (source_workload) or sum(istio_tcp_sent_bytes_total{reporter=~\"$qrep\", destination_service=~\"$service\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}) by (source_workload))",
          "hide": 0,
          "includeAll": true,
          "label": "Client Workload",
          "multi": true,
          "name": "srcwl",
          "options": [],
          "query": {
            "qryType": 3,
            "query": "query_result(sum(istio_requests_total{reporter=~\"$qrep\", destination_service=~\"$service\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}) by (source_workload) or sum(istio_tcp_sent_bytes_total{reporter=~\"$qrep\", destination_service=~\"$service\", source_workload_namespace=~\"$srcns\", cluster=\"$cluster\"}) by (source_workload))",
            "refId": "PrometheusVariableQueryEditor-VariableQuery"
          },
          "refresh": 1,
          "regex": "/.*workload=\"([^\"]*).*/",
          "skipUrlSync": false,
          "sort": 4,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "selected": true,
            "text": [
              "All"
            ],
            "value": [
              "$__all"
            ]
          },
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "definition": "query_result(sum(istio_requests_total{reporter=\"destination\", destination_service=\"$service\", cluster=\"$cluster\"}) by (destination_cluster) or sum(istio_tcp_sent_bytes_total{reporter=\"destination\", destination_service=~\"$service\", cluster=\"$cluster\"}) by (destination_cluster))",
          "hide": 0,
          "includeAll": true,
          "label": "Service Workload Cluster",
          "multi": true,
          "name": "dstcluster",
          "options": [],
          "query": {
            "qryType": 3,
            "query": "query_result(sum(istio_requests_total{reporter=\"destination\", destination_service=\"$service\", cluster=\"$cluster\"}) by (destination_cluster) or sum(istio_tcp_sent_bytes_total{reporter=\"destination\", destination_service=~\"$service\", cluster=\"$cluster\"}) by (destination_cluster))",
            "refId": "PrometheusVariableQueryEditor-VariableQuery"
          },
          "refresh": 1,
          "regex": "/.*cluster=\"([^\"]*).*/",
          "skipUrlSync": false,
          "sort": 2,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "selected": true,
            "text": [
              "All"
            ],
            "value": [
              "$__all"
            ]
          },
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "definition": "query_result(sum(istio_requests_total{reporter=\"destination\", destination_service=\"$service\", cluster=\"$cluster\"}) by (destination_workload_namespace) or sum(istio_tcp_sent_bytes_total{reporter=\"destination\", destination_service=~\"$service\", cluster=\"$cluster\"}) by (destination_workload_namespace))",
          "hide": 0,
          "includeAll": true,
          "label": "Service Workload Namespace",
          "multi": true,
          "name": "dstns",
          "options": [],
          "query": {
            "qryType": 3,
            "query": "query_result(sum(istio_requests_total{reporter=\"destination\", destination_service=\"$service\", cluster=\"$cluster\"}) by (destination_workload_namespace) or sum(istio_tcp_sent_bytes_total{reporter=\"destination\", destination_service=~\"$service\", cluster=\"$cluster\"}) by (destination_workload_namespace))",
            "refId": "PrometheusVariableQueryEditor-VariableQuery"
          },
          "refresh": 1,
          "regex": "/.*namespace=\"([^\"]*).*/",
          "skipUrlSync": false,
          "sort": 3,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "selected": true,
            "text": [
              "All"
            ],
            "value": [
              "$__all"
            ]
          },
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "definition": "query_result( sum(istio_requests_total{reporter=\"destination\", destination_service=~\"$service\", destination_cluster=~\"$dstcluster\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}) by (destination_workload) or sum(istio_tcp_sent_bytes_total{reporter=\"destination\", destination_service=~\"$service\", destination_cluster=~\"$dstcluster\", destination_workload_namespace=~\"$dstns\"}) by (destination_workload))",
          "hide": 0,
          "includeAll": true,
          "label": "Service Workload",
          "multi": true,
          "name": "dstwl",
          "options": [],
          "query": {
            "qryType": 3,
            "query": "query_result( sum(istio_requests_total{reporter=\"destination\", destination_service=~\"$service\", destination_cluster=~\"$dstcluster\", destination_workload_namespace=~\"$dstns\", cluster=\"$cluster\"}) by (destination_workload) or sum(istio_tcp_sent_bytes_total{reporter=\"destination\", destination_service=~\"$service\", destination_cluster=~\"$dstcluster\", destination_workload_namespace=~\"$dstns\"}) by (destination_workload))",
            "refId": "PrometheusVariableQueryEditor-VariableQuery"
          },
          "refresh": 1,
          "regex": "/.*workload=\"([^\"]*).*/",
          "skipUrlSync": false,
          "sort": 4,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        }
      ]
    },
    "time": {
      "from": "now-15m",
      "to": "now"
    },
    "timepicker": {
      "refresh_intervals": [
        "5m",
        "15m",
        "30m",
        "1h",
        "2h",
        "1d"
      ],
      "time_options": [
        "5m",
        "15m",
        "1h",
        "6h",
        "12h",
        "24h",
        "2d",
        "7d",
        "30d"
      ]
    },
    "timezone": "",
    "title": "Istio Service Dashboard",
    "uid": "bdmc4n2czfchsa",
    "version": 3,
    "weekStart": ""
  }